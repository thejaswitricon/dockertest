on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    - name: Run tests
      run: pytest

release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Bump version
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const semver = require('semver');
            const versionFile = 'version.txt';
            const currentVersion = fs.readFileSync(versionFile, 'utf-8').trim();
            const releaseType = core.getInput('release_type');
            const newVersion = semver.inc(currentVersion, releaseType);
            fs.writeFileSync(versionFile, newVersion);
            console.log(`::set-output name=new_version::${newVersion}`);

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump_version.outputs.new_version }}
          release_name: Release ${{ steps.bump_version.outputs.new_version }}
          body: This is the release for version ${{ steps.bump_version.outputs.new_version }}
          draft: false
          prerelease: false