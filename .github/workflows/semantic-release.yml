name: Semantic Release

on:
  push:
    branches:
      - master
    paths:
      - 'applications/newrelic/**'
      - 'applications/aws/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Install Dependencies
        run: npm install

      - name: Determine Changed Directories
        id: determine_directories
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/master:refs/remotes/origin/master
          git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | awk -F'/' '{print $2}' | sort | uniq > changed_dirs.txt
          echo "Changed Directories: $(cat changed_dirs.txt)"
        shell: bash

      - name: Set up Matrix
        id: matrix
        uses: fregante/matrix-external@v2.0.2
        with:
          cols: ${{ steps.determine_directories.outputs.changed_dirs }}
          separator: ','

      - name: Run Semantic Release
        uses: "semantic-release/action@v1"
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        env:
          CI: true
          GIT_AUTHOR_NAME: Semantic Release Bot
          GIT_AUTHOR_EMAIL: semantic-release-bot@users.noreply.github.com
          GIT_COMMITTER_NAME: Semantic Release Bot
          GIT_COMMITTER_EMAIL: semantic-release-bot@users.noreply.github.com



# name: semantic-release for apps

# on:
#   push:
#     branches:
#       - master
#     paths:
#       - 'applications/aws/**'
#       - 'applications/newrelic/**'

# permissions: write-all

# jobs:
#   release:
#     name: Semantic Release
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#         id: checkout
#         with:
#           fetch-depth: 0

#       # Get the name of the directory that was changed
#       - name: Get changed directories
#         id: changed_dirs
#         run: |
#           echo "::set-output name=dirs::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | awk -F/ '{print $2 "/" $3}' | sort -u)"

#       # Update the tag format to include the name of the directory
#       - name: Update tag format
#         id: update_tag_format
#         run: |
#           APP_NAME=$(echo "${{ steps.changed_dirs.outputs.dirs }}" | awk '{print tolower($0)}')
#           echo "::set-output name=tag_format::${APP_NAME}-v\${version}"
      
#       - name: Add new version to changelog
#         id: add_version_to_changelog
#         run: |
#           version=$(git describe --tags $(git rev-list --tags --max-count=1))
#           sed -i "s|\[[0-9]\+\.[0-9]\+\.[0-9]\+\]|[${version}] $(date +'%Y-%m-%d')|" CHANGELOG.md        
#         continue-on-error: true 

#       # https://github.com/marketplace/actions/semantic-release-action#usage
#       - name: Semantic Release
#         uses: docker://ghcr.io/codfish/semantic-release-action:v2
#         id: semantic
#         env:
#           GITHUB_TOKEN: ${{ secrets.PAT_GITHUB2 }}
#         with:
#           tag_format: '${{ steps.update_tag_format.outputs.tag_format }}'
#           additional_packages: |
#             ['@semantic-release/changelog', '@semantic-release/git']
#           plugins: |
#             ['@semantic-release/commit-analyzer', '@semantic-release/release-notes-generator', ['@semantic-release/changelog', {changelogTitle: '# CHANGELOG'}], '@semantic-release/github', '@semantic-release/git']
#           # specify default branches to add support for the `main` branch
#           # which semantic-release doesn't have as a default yet.
#           branches: |
#             [
#               'master'
#             ]
        
#       # # Get the latest version tag
#       # - name: Get latest version tag
#       #   run: |
#       #     version=$(git describe --tags --abbrev=0)
#       #     echo "::set-output name=version::$version"

#       - name: Semantic Release Output Summary
#         id: semantic_summary
#         run: |
#           echo "### Semantic Version = ${{ steps.semantic.outputs.release-version }}\`" >> $GITHUB_STEP_SUMMARY
#           echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
#           echo "${{ toJson(steps.semantic.outputs) }}" >> $GITHUB_STEP_SUMMARY
#           echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
#         continue-on-error: true
###################################################################################################################
# jobs:
#   release:
#     strategy:
#       matrix:
#         app: [app1, app2] # Add all application directories you want to run
#     name: Semantic Release for ${{ matrix.app }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
          
#       # Get the name of the directory that was changed
#       - uses: Stockopedia/action-get-changed-files@v1
#         id: get_changed
#         with:
#           path: applications
#           github-token: ${{ secrets.PAT_GITHUB2 }}
#           ignore: "**/+(.github)"
#           foldersOnly: true 
#           format: csv
#       - name: Echo changed files
#         run: echo ${{ steps.get_changed.outputs.changed }}  

#       # Update the tag format to include the name of the directory
#       - name: Update tag format
#         id: update_tag_format
#         run: 
#           echo "::set-output name=tag_format::${{ steps.get_changed.outputs.dir }}-v\${version}"
#         # env:
#         #   VERSION: ${{ github.run_number }}

#       - name: Add new version to changelog
#         id: add_version_to_changelog
#         run: |
#           version=$(git describe --tags --abbrev=0)
#           sed -i "s/\[[0-9]\+\.[0-9]\+\.[0-9]\+\]/[${version}] $(date +'%Y-%m-%d')/" CHANGELOG.md        
#         continue-on-error: true 

#       # https://github.com/marketplace/actions/semantic-release-action#usage
#       - name: Semantic Release
#         uses: docker://ghcr.io/codfish/semantic-release-action:v2
#         id: semantic
#         env:
#           GITHUB_TOKEN: ${{ secrets.PAT_GITHUB2 }}
#         with:
#           tag_format: '${{ steps.update_tag_format.outputs.tag_format }}'
#           additional_packages: |
#             ['@semantic-release/changelog', '@semantic-release/git']
#           plugins: |
#             ['@semantic-release/commit-analyzer', '@semantic-release/release-notes-generator', ['@semantic-release/changelog', {changelogTitle: '# CHANGELOG'}], '@semantic-release/github', '@semantic-release/git']
#           # specify default branches to add support for the `main` branch
#           # which semantic-release doesn't have as a default yet.
#           branches: |
#             [
#               'master'
#             ]

#       # # Get the latest version tag
#       # - name: Get latest version tag
#       #   run: |
#       #     version=$(git describe --tags --abbrev=0)
#       #     echo "::set-output name=version::$version"

#       - name: Semantic Release Output Summary
#         id: semantic_summary
#         run: |
#           echo "### Semantic Version = ${{ steps.semantic.outputs.release-version }}\`" >> $GITHUB_STEP_SUMMARY
#           echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
#           echo "${{ toJson(steps.semantic.outputs) }}" >> $GITHUB_STEP_SUMMARY
#           echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
#         continue-on-error: true
