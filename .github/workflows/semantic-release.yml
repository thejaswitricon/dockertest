name: Semantic Release for Apps

on:
  push:
    branches:
      - master
    paths:
      - 'applications/**'

permissions: write-all

jobs:
  release:
    strategy:
      matrix:
        app: [app1, app2] # Add all application directories you want to run
    name: Semantic Release for ${{ matrix.app }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      # Get the name of the directory that was changed
      - name: Get changed directory
        id: changed_dir
        run: 
          echo "::set-output name=dir::${{ matrix.app }}"
        
      # Update the tag format to include the name of the directory
      - name: Update tag format
        id: update_tag_format
        run: 
          echo "::set-output name=tag_format::${{ steps.changed_dir.outputs.dir }}-v\${version}"
        # env:
        #   VERSION: ${{ github.run_number }}

      - name: Add new version to changelog
        id: add_version_to_changelog
        run: |
          version=$(git describe --tags --abbrev=0)
          sed -i "s/\[[0-9]\+\.[0-9]\+\.[0-9]\+\]/[${version}] $(date +'%Y-%m-%d')/" CHANGELOG.md        
        continue-on-error: true 

      # https://github.com/marketplace/actions/semantic-release-action#usage
      - name: Semantic Release
        uses: docker://ghcr.io/codfish/semantic-release-action:v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB2 }}
        with:
          tag_format: '${{ steps.update_tag_format.outputs.tag_format }}'
          additional_packages: |
            ['@semantic-release/changelog', '@semantic-release/git']
          plugins: |
            ['@semantic-release/commit-analyzer', '@semantic-release/release-notes-generator', ['@semantic-release/changelog', {changelogTitle: '# CHANGELOG'}], '@semantic-release/github', '@semantic-release/git']
          # specify default branches to add support for the `main` branch
          # which semantic-release doesn't have as a default yet.
          branches: |
            [
              'master'
            ]

      # # Get the latest version tag
      # - name: Get latest version tag
      #   run: |
      #     version=$(git describe --tags --abbrev=0)
      #     echo "::set-output name=version::$version"

      - name: Semantic Release Output Summary
        id: semantic_summary
        run: |
          echo "### Semantic Version = ${{ steps.semantic.outputs.release-version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ toJson(steps.semantic.outputs) }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
# jobs:
#   extract-folders:
#     runs-on: ubuntu-latest
#     outputs:
#       dirs: ${{ steps.filter_dirs.outputs.dirs }}
#     steps:
#       - uses: Stockopedia/action-get-changed-files@v1
#         id: get_changed
#         with:
#           github-token: ${{ secrets.PAT_GITHUB2 }}
#           ignore: "**/+(.github)"
#           foldersOnly: true 
#           format: csv
#       - name: Echo changed files
#         run: echo ${{ steps.get_changed.outputs.changed }}

      # - name: Get changed folders
      #   id: filter_dirs
      #   run: |
      #     folders=$(echo "${{ steps.get_changed.outputs.changed }}" | awk -F/ '{print $2}' | sort -u)
      #     echo "::set-output name=folders::${folders}"
          

    #   - name: Set up matrix
    #     id: matrix
    #     run: |
    #       echo "::set-output name=matrix::$(echo "${{ steps.filter_dirs.outputs.dirs }}" | sed -e "s/\(.*\)/[\1]/g")"

    # strategy:
    #   matrix: ${{ fromJSON(steps.matrix.outputs.matrix) }}
    #   fail-fast: false

    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v2

    #   - name: Print directory
    #     run: echo "Changed directory: ${{ matrix.dir }}"

# jobs:
#   get-changed-dirs:
#     name: Get changed directories
#     runs-on: ubuntu-latest
#     outputs:
#       dirs: ${{ steps.filter_dirs.outputs.dirs }}
#     steps:
#       - name: Filter dirs
#         id: filter_dirs
#         run: |
#           dirs=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | awk -F/ '{print $2}' | sort -u)
#           echo "::set-output name=dirs::$dirs"

      

#   release:
#     needs: [get-changed-dirs]
#     name: Semantic Release
#     strategy:
#       matrix:
#         dirs: ${{ steps.get-changed-dirs.outputs.dirs }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0

#       - name: Print directories with changes
#         run: |
#           echo "Changed directories: ${{ steps.get-changed-dirs.outputs.dirs }}"

#       # Update the tag format to include the name of the directory
#       - name: Update tag format
#         id: update_tag_format
#         run: |
#           APP_NAME=$(echo "${{ matrix.dirs }}" | awk '{print tolower($0)}')
#           echo "::set-output name=tag_format::${APP_NAME}-v\${version}"

#       - name: Add new version to changelog
#         id: add_version_to_changelog
#         run: |
#           version=$(git describe --tags --abbrev=0)
#           sed -i "s/\[[0-9]\+\.[0-9]\+\.[0-9]\+\]/[${version}] $(date +'%Y-%m-%d')/" CHANGELOG.md        
#         continue-on-error: true 

#       # https://github.com/marketplace/actions/semantic-release-action#usage
#       - name: Semantic Release
#         uses: docker://ghcr.io/codfish/semantic-release-action:v2
#         id: semantic
#         env:
#           GITHUB_TOKEN: ${{ secrets.PAT_GITHUB2 }}
#         with:
#           tag_format: '${{ steps.update_tag_format.outputs.tag_format }}'
#           additional_packages: |
#             ['@semantic-release/changelog', '@semantic-release/git']
#           plugins: |
#             ['@semantic-release/commit-analyzer', '@semantic-release/release-notes-generator', ['@semantic-release/changelog', {changelogTitle: '# CHANGELOG'}], '@semantic-release/github', '@semantic-release/git']
#           # specify default branches to add support for the `main` branch
#           # which semantic-release doesn't have as a default yet.
#           branches: |
#             [
#               'master'
#             ]

#       - name: Semantic Release Output Summary
#         id: semantic_summary
#         run: |
#           echo "### Semantic Version = ${{ steps.semantic.outputs.release-version }}\`" >> $GITHUB_STEP_SUMMARY
#           echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
#           echo "${{ toJson(steps.semantic.outputs) }}" >> $GITHUB_STEP_SUMMARY
#           echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
#         continue-on-error: true


# name: Semantic Release for Apps

# on:
#   push:
#     branches:
#       - master
#     paths:
#       - 'applications/**'

# permissions: write-all

# jobs:
#   release:
#     name: Semantic Release
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#         id: checkout
#         with:
#           fetch-depth: 0

#       # Get the name of the directory that was changed
#       - name: Get changed directories
#         id: changed_dirs
#         run: |
#           echo "::set-output name=dirs::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | awk -F/ '{print $2}' | sort -u)"

#       # Update the version number in the changelog file
#       - name: Update changelog
#         id: update_changelog
#         run: |
#           app_name="${{ steps.changed_dirs.outputs.dirs }}"
#           version="${{ steps.semantic.outputs.next-version }}"
#           sed -i "1s/.*/# CHANGELOG ${app_name}-${version}/" ../CHANGELOG.md

#       # Update the tag format to include the name of the directory
#       - name: Update tag format
#         id: update_tag_format
#         run: |
#           echo "::set-output name=tag_format::${{ steps.changed_dirs.outputs.dirs }}-v\${version}"

#       # https://github.com/marketplace/actions/semantic-release-action#usage
#       - name: Semantic Release
#         uses: docker://ghcr.io/codfish/semantic-release-action:v2
#         id: semantic
#         env:
#           GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
#         with:
#           tag_format: '${{ steps.update_tag_format.outputs.tag_format }}'
#           additional_packages: |
#             ['@semantic-release/changelog', '@semantic-release/git']
#           plugins: |
#             ['@semantic-release/commit-analyzer', '@semantic-release/release-notes-generator', ['@semantic-release/changelog', {changelogTitle: '# CHANGELOG'}], '@semantic-release/github', '@semantic-release/git']
#           # specify default branches to add support for the `main` branch
#           # which semantic-release doesn't have as a default yet.
#           branches: |
#             [
#               'master'
#             ]

#       - name: Update CHANGELOG.md
#         id: update_changelog
#         run: |
#           folder_name=$(echo "${{ steps.changed_dirs.outputs.dirs }}" | awk '{print tolower($0)}')
#           version=$(echo "${{ steps.semantic.outputs.release-version }}" | sed 's/^v//')
#           date=$(date +%Y-%m-%d)
#           changelog_entry="## [$version](https://github.com/thejaswitricon/dockertest/compare/${folder_name}-v$version...${folder_name}-v$version) ($date)"
#           sed -i "/# CHANGELOG/a $changelog_entry" CHANGELOG.md
#         continue-on-error: true

#       - name: Semantic Release Output Summary
#         id: semantic_summary
#         run: |
#           echo "### Semantic Version = ${{ steps.semantic.outputs.release-version }}\`" >> $GITHUB_STEP_SUMMARY
#           echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
#           echo "${{ toJson(steps.semantic.outputs) }}" >> $GITHUB_STEP_SUMMARY
#           echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
#         continue-on-error: true
