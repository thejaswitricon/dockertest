name: Semantic Release for Apps

on:
  push:
     branches:
      - master
    paths:
      - 'applications/**'

permissions: write-all

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Get the list of directories that have changed
      - name: Get changed directories
        id: changed_dirs
        run: |
          echo "::set-output name=dirs::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | awk -F/ '{print $2}' | sort -u)"

      # Loop over the directories and run the release steps for each
      - name: Loop over directories
        id: loop_over_dirs
        run: |
          for APP_NAME in ${{ steps.changed_dirs.outputs.dirs }}; do
            echo "::set-output name=dir::$APP_NAME"
            echo "Running release steps for $APP_NAME"
        # Set the tag format to include the name of the directory
            echo "::set-env name=TAG_FORMAT::$APP_NAME-v\${{ steps.semantic.outputs.version }}"
        # Update the changelog for the directory
            sed -i "s/\[[0-9]\+\.[0-9]\+\.[0-9]\+\]/[\${{ steps.semantic.outputs.version }}] $(date +'%Y-%m-%d')/" applications/$APP_NAME/CHANGELOG.md
        # Run semantic release for the directory
            docker run --rm \
              -e GITHUB_TOKEN="${{ secrets.PAT_GITHUB2 }}" \
              -e TAG_FORMAT="${{ env.TAG_FORMAT }}" \
              -e ADDITIONAL_PACKAGES='["@semantic-release/changelog", "@semantic-release/git"]' \
              -e PLUGINS='["@semantic-release/commit-analyzer", "@semantic-release/release-notes-generator", ["@semantic-release/changelog", {changelogTitle: "# CHANGELOG"}], "@semantic-release/github", ["@semantic-release/git", {assets: ["CHANGELOG.md"], message: "chore(release): \${{ nextRelease.version }} [skip ci]\n\n\${{ nextRelease.notes }}\n\nSigned-off-by: Thejaswiiii <abc@gmail.com>"}]]' \
              -e BRANCHES='["master"]' \
              -v "$(pwd)":/app \
              ghcr.io/codfish/semantic-release-action:v2
          done
      - name: Semantic Release Output Summary
        id: semantic_summary
        run: |
          echo "### Semantic Version = ${{ steps.semantic.outputs.release-version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ toJson(steps.semantic.outputs) }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

